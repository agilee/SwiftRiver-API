<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/jdbc 
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

	<!-- post-processors for all standard config annotations -->
	<context:annotation-config />

	<bean id="bcryptPasswordEncoder"
		class="com.ushahidi.swiftriver.core.api.auth.CustomBCryptPasswordEncoder" />

	<!-- Repository Beans -->
	<bean id="accountDao" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaAccountDao" />
	<bean id="userDao" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaUserDao" />
	<bean id="userTokenDao"
		class="com.ushahidi.swiftriver.core.api.dao.impl.JpaUserTokenDao" />
	<bean id="clientDao" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaClientDao" />
	<bean id="roleDao" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaRoleDao" />
	<bean id="riverDao" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaRiverDao" />
	<bean id="dropDao" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaDropDao" />
	<bean id="riverDropDao"
		class="com.ushahidi.swiftriver.core.api.dao.impl.JpaRiverDropDao" />
	<bean id="bucketDropDao"
		class="com.ushahidi.swiftriver.core.api.dao.impl.JpaBucketDropDao" />
	<bean id="bucketDao" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaBucketDao" />
	<bean id="channel" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaChannelDao" />
	<bean id="linkDao" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaLinkDao" />
	<bean id="placeDao" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaPlaceDao" />
	<bean id="tagDao" class="com.ushahidi.swiftriver.core.api.dao.impl.JpaTagDao" />
	<bean id="riverCollaboratorDao"
		class="com.ushahidi.swiftriver.core.api.dao.impl.JpaRiverCollaboratorDao" />
	<bean id="bucketCollaboratorDao"
		class="com.ushahidi.swiftriver.core.api.dao.impl.JpaBucketCollaboratorDao" />
	<bean id="bucketCommentDao"
		class="com.ushahidi.swiftriver.core.api.dao.impl.JpaBucketCommentDao" />

	<!-- Service Beans -->
	<bean id="accountService" class="com.ushahidi.swiftriver.core.api.service.AccountService">
		<property name="key" ref="encryptionKey" />
	</bean>
	<bean id="riverService" class="com.ushahidi.swiftriver.core.api.service.RiverService" />
	<bean id="bucketService" class="com.ushahidi.swiftriver.core.api.service.BucketService" />
	<bean id="dropService" class="com.ushahidi.swiftriver.core.api.service.DropService" />

	<!-- Bean Mapper -->
	<bean id="mapper" class="org.dozer.DozerBeanMapper">
		<property name="mappingFiles">
			<list>
				<value>config/dozer-bean-mappings.xml</value>
			</list>
		</property>
	</bean>

	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.ushahidi.swiftriver.core.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="generateDdl" value="false" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
			</bean>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.class}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<!-- Data Sources -->
	<beans profile="prod">
		<context:property-placeholder location="file:///${ext.prop.dir}/*.properties" />

		<bean id="encryptionKey" class="java.lang.String">
			<constructor-arg value="${encrypt.key}" />
		</bean>
	</beans>

	<beans profile="test">
		<context:property-placeholder location="classpath:db-test.properties" />

		<bean id="encryptionKey" class="java.lang.String">
			<constructor-arg value="2344228477#97{7&amp;6&gt;82" />
		</bean>

		<jdbc:initialize-database data-source="dataSource">
			<jdbc:script location="classpath:config/sql/schema-destroy.sql" />
			<jdbc:script location="classpath:config/sql/schema-create.sql" />
			<jdbc:script location="classpath:config/sql/test-data.sql" />
		</jdbc:initialize-database>
	</beans>
</beans>